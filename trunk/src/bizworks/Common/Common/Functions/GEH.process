<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx="http://www.tibco.com/pe/EngineTypes" xmlns:chsCom="http://code.google.com/tvillars/tibco/bw/Common/Schemas/Common" xmlns:chsGEH="http://code.google.com/tvillars/tibco/bw/Common/Functions/GEH" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns2="www.tibco.com/plugin/Sleep" xmlns:pfx3="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions">
    <xsd:import namespace="http://www.tibco.com/pe/EngineTypes" schemaLocation="/Common/Schemas/BizWorks/EngineTypes.xsd"/>
    <xsd:import namespace="http://code.google.com/tvillars/tibco/bw/Common/Schemas/Common" schemaLocation="/Common/Schemas/Common.xsd"/>
    <xsd:import namespace="http://code.google.com/tvillars/tibco/bw/Common/Functions/GEH" schemaLocation="/Common/Functions/GEH.xsd"/>
    <pd:name>Common/Functions/GEH.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="GEH">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:ErrorReport"/>
                    <xsd:element name="DescShortPrefix" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="DescLongAppend" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="chsCom:Context" minOccurs="0"/>
                    <xsd:element name="Retry" minOccurs="0">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="RetryCount" type="xsd:int"/>
                                <xsd:element ref="chsGEH:RetryOptions"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>54</pd:startX>
    <pd:startY>174</pd:startY>
    <pd:returnBindings>
        <GEH>
            <xsl:variable name="AllNotifies" select="$Notify---TechError-embedded&#xA;| $Notify---Error-Mapped-To-TechError&#xA;| $Notify---DataError&#xA;| $Notify---TechError&#xA;| $Notify---Error"/>
            <GiveUp>
                <xsl:value-of select="$RetryState/RetryState/Retry = &quot;false&quot;"/>
            </GiveUp>
            <GEHInput>
                <xsl:copy-of select="$Start/GEH/pfx:ErrorReport"/>
                <DescShort>
                    <xsl:value-of select="($AllNotifies//chsGEH:DescShort)[last()]"/>
                </DescShort>
                <DescLong>
                    <xsl:value-of select="($AllNotifies//chsGEH:DescLong)[last()]"/>
                </DescLong>
                <xsl:copy-of select="$Start/GEH/chsCom:Context"/>
                <xsl:for-each select="$Start/GEH/Retry">
                    <Retry>
                        <RetryCount>
                            <xsl:value-of select="RetryCount"/>
                        </RetryCount>
                        <xsl:copy-of select="chsGEH:RetryOptions"/>
                    </Retry>
                </xsl:for-each>
            </GEHInput>
        </GEH>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="GEH">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="GiveUp" type="xsd:boolean" minOccurs="0"/>
                    <xsd:element name="GEHInput" minOccurs="0">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element ref="pfx:ErrorReport"/>
                                <xsd:element name="DescShort" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="DescLong" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                                <xsd:element name="ExternalSystem" type="xsd:string" minOccurs="0"/>
                                <xsd:element ref="chsCom:Context" minOccurs="0"/>
                                <xsd:element name="Retry" minOccurs="0">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="RetryCount" type="xsd:int"/>
                                            <xsd:element ref="chsGEH:RetryOptions"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>793</pd:endX>
    <pd:endY>150</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <RetryState>
            <xsd:element name="RetryState">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="Retry" type="xsd:boolean"/>
                        <xsd:element name="SleepSecs" type="xsd:int" minOccurs="0"/>
                        <xsd:element name="Notify" type="xsd:boolean"/>
                        <xsd:element name="param" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </RetryState>
        <TryForever ref="chsGEH:TryForever"/>
    </pd:processVariables>
    <pd:activity name="Calc Retry State">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>266</pd:x>
        <pd:y>440</pd:y>
        <config>
            <variableName>RetryState</variableName>
        </config>
        <pd:inputBindings>
            <RetryState>
                <xsl:variable name="RetryTemp" select="exists($Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryForever)&#xA;or&#xA;($Start/GEH/Retry/RetryCount &lt; $Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryXTimes/chsGEH:TimesToTry)"/>
                <Retry>
                    <xsl:value-of select="$RetryTemp"/>
                </Retry>
                <SleepSecs>
                    <xsl:value-of select="if (exists($Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryXTimes)) &#xA;  then $Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryXTimes/chsGEH:SecsToPauseBetweenRetries &#xA;  else if ($Start/GEH/Retry/RetryCount &lt; $TryForever/chsGEH:TryForever/chsGEH:FirstError/chsGEH:RetryCountToLogError)&#xA;         then $TryForever/chsGEH:TryForever/chsGEH:FirstError/chsGEH:SecsToPauseBetweenRetries &#xA;         else $TryForever/chsGEH:TryForever/chsGEH:SubsequentErrors/chsGEH:SecsToPauseBetweenRetries"/>
                </SleepSecs>
                <Notify>
                    <xsl:value-of select="($RetryTemp = false())&#xA;or &#xA;(&#xA;if ($Start/GEH/Retry/RetryCount = $TryForever/chsGEH:TryForever/chsGEH:FirstError/chsGEH:RetryCountToLogError) &#xA;  then true()&#xA;  else (($Start/GEH/Retry/RetryCount mod $TryForever/chsGEH:TryForever/chsGEH:SubsequentErrors/chsGEH:RetryCountToLogError) = 0)&#xA;)"/>
                </Notify>
                <param>
                    <xsl:value-of select="if ($Start/GEH/Retry/RetryCount = $TryForever/chsGEH:TryForever/chsGEH:FirstError/chsGEH:RetryCountToLogError) &#xA;  then true()&#xA;  else (($Start/GEH/Retry/RetryCount mod $TryForever/chsGEH:TryForever/chsGEH:SubsequentErrors/chsGEH:RetryCountToLogError) = 0)"/>
                </param>
            </RetryState>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Embedded Tech Error Check">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>382</pd:x>
        <pd:y>300</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Get Last Retryable Error">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>57</pd:x>
        <pd:y>448</pd:y>
        <config>
            <variableConfig>/Common/Functions/Subprocesses/GEH/TrackLastErrorByJob.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Give Up or Retry">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>793</pd:x>
        <pd:y>292</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Log - DataError">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>673</pd:x>
        <pd:y>106</pd:y>
        <config>
            <role>%%Constants/Logging/Roles/DataError%%</role>
        </config>
        <pd:inputBindings>
            <pfx3:ActivityInput>
                <message>
                    <xsl:value-of select="concat(&#xA;&quot;&#xD;&#xA;&quot;,$Notify---DataError/Notify/message)"/>
                </message>
                <xsl:if test="$Notify---DataError/Notify/msgCode">
                    <msgCode>
                        <xsl:value-of select="$Notify---DataError/Notify/msgCode"/>
                    </msgCode>
                </xsl:if>
            </pfx3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log - Error">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>673</pd:x>
        <pd:y>35</pd:y>
        <config>
            <role>%%Constants/Logging/Roles/Error%%</role>
        </config>
        <pd:inputBindings>
            <pfx3:ActivityInput>
                <message>
                    <xsl:value-of select="concat(&#xA;&quot;&#xD;&#xA;&quot;,$Notify---Error/Notify/message)"/>
                </message>
                <xsl:if test="$Notify---Error/Notify/msgCode">
                    <msgCode>
                        <xsl:value-of select="$Notify---Error/Notify/msgCode"/>
                    </msgCode>
                </xsl:if>
            </pfx3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log - TechError">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>673</pd:x>
        <pd:y>174</pd:y>
        <config>
            <role>%%Constants/Logging/Roles/TechError%%</role>
        </config>
        <pd:inputBindings>
            <pfx3:ActivityInput>
                <message>
                    <xsl:value-of select="concat(&#xA;&quot;&#xD;&#xA;&quot;,$Notify---TechError/Notify/message)"/>
                </message>
                <xsl:if test="$Notify---TechError/Notify/msgCode">
                    <msgCode>
                        <xsl:value-of select="$Notify---TechError/Notify/msgCode"/>
                    </msgCode>
                </xsl:if>
            </pfx3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log - TechError (embedded)">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>673</pd:x>
        <pd:y>255</pd:y>
        <config>
            <role>%%Constants/Logging/Roles/TechError%%</role>
        </config>
        <pd:inputBindings>
            <pfx3:ActivityInput>
                <message>
                    <xsl:value-of select="concat(&#xA;&quot;&#xD;&#xA;&quot;,$Notify---TechError-embedded/Notify/message)"/>
                </message>
                <xsl:if test="$Notify---TechError-embedded/Notify/msgCode">
                    <msgCode>
                        <xsl:value-of select="$Notify---TechError-embedded/Notify/msgCode"/>
                    </msgCode>
                </xsl:if>
            </pfx3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log - TechError (Not Notified)">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>448</pd:x>
        <pd:y>503</pd:y>
        <config>
            <role>%%Constants/Logging/Roles/TechError%%</role>
        </config>
        <pd:inputBindings>
            <pfx3:ActivityInput>
                <message>
                    <xsl:value-of select="translate(&#xA;concat(&#xA;'&#x9;','Process Context: ','&#x9;', tib:render-xml($_processContext/pfx:ProcessContext, 1,0)&#xA;,'&#x9;','Retry: ','&#x9;', tib:render-xml($Start/GEH/Retry, 1,0)&#xA;,'&#x9;','ErrorReport: ', tib:render-xml($Start/GEH/pfx:ErrorReport, 1,0)&#xA;)&#xA;,'&#xA;&#xD;&#xD;&#xA;'&#xA;,'&#x9;&#x9;&#x9;')"/>
                </message>
                <msgCode>
                    <xsl:value-of select="($Start/GEH//MsgCode)[last()]"/>
                </msgCode>
            </pfx3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log - TechError (Notified)">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>673</pd:x>
        <pd:y>349</pd:y>
        <config>
            <role>%%Constants/Logging/Roles/TechError%%</role>
        </config>
        <pd:inputBindings>
            <pfx3:ActivityInput>
                <message>
                    <xsl:value-of select="concat(&#xA;&quot;&#xD;&#xA;&quot;,$Notify---Error-Mapped-To-TechError/Notify/message)"/>
                </message>
                <xsl:if test="$Notify---Error-Mapped-To-TechError/Notify/msgCode">
                    <msgCode>
                        <xsl:value-of select="$Notify---Error-Mapped-To-TechError/Notify/msgCode"/>
                    </msgCode>
                </xsl:if>
            </pfx3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Notify - DataError">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>550</pd:x>
        <pd:y>107</pd:y>
        <config>
            <processName>/Common/Functions/Subprocesses/Notify/Notify.process</processName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/GEH/pfx:ErrorReport/Data/*" element="chsGEH:DataError" cardinality=""/>
        </pd:coercions>
        <pd:inputBindings>
            <Notify>
                <chsGEH:DataError>
                    <xsl:copy-of select="$Start/GEH/chsCom:Context"/>
                    <xsl:copy-of select="$Start/GEH/pfx:ErrorReport/Data/chsGEH:DataError/chsCom:Context"/>
                    <chsGEH:DescShort>
                        <xsl:value-of select="concat(&#xA;$Start/GEH/DescShortPrefix&#xA;,$Start/GEH/pfx:ErrorReport/Data/chsGEH:DataError/chsGEH:DescShort)"/>
                    </chsGEH:DescShort>
                    <xsl:for-each select="$Start/GEH/pfx:ErrorReport/Data/chsGEH:DataError/chsGEH:DescLong">
                        <chsGEH:DescLong>
                            <xsl:value-of select="."/>
                        </chsGEH:DescLong>
                    </xsl:for-each>
                    <xsl:for-each select="$Start/GEH/DescLongAppend">
                        <chsGEH:DescLong>
                            <xsl:value-of select="."/>
                        </chsGEH:DescLong>
                    </xsl:for-each>
                    <xsl:copy-of select="$Start/GEH/pfx:ErrorReport/Data/chsGEH:DataError/chsGEH:ErrorReport"/>
                </chsGEH:DataError>
            </Notify>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Notify - Error">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>551</pd:x>
        <pd:y>35</pd:y>
        <config>
            <processName>/Common/Functions/Subprocesses/Notify/Notify.process</processName>
        </config>
        <pd:inputBindings>
            <Notify>
                <chsGEH:Error>
                    <xsl:copy-of select="$Start/GEH/chsCom:Context"/>
                    <chsGEH:DescShort>
                        <xsl:value-of select="concat($Start/GEH/DescShortPrefix,$Start/GEH/pfx:ErrorReport/Msg)"/>
                    </chsGEH:DescShort>
                    <xsl:for-each select="$Start/GEH/DescLongAppend">
                        <chsGEH:DescLong>
                            <xsl:value-of select="."/>
                        </chsGEH:DescLong>
                    </xsl:for-each>
                    <chsGEH:ErrorReport>
                        <xsl:copy-of select="$Start/GEH/pfx:ErrorReport/ancestor-or-self::*/namespace::node()"/>
                        <xsl:copy-of select="$Start/GEH/pfx:ErrorReport/@*"/>
                        <xsl:copy-of select="$Start/GEH/pfx:ErrorReport/node()"/>
                    </chsGEH:ErrorReport>
                </chsGEH:Error>
            </Notify>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Notify - Error Mapped To TechError">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>551</pd:x>
        <pd:y>356</pd:y>
        <config>
            <processName>/Common/Functions/Subprocesses/Notify/Notify.process</processName>
        </config>
        <pd:inputBindings>
            <Notify>
                <chsGEH:TechError>
                    <xsl:copy-of select="$Start/GEH/chsCom:Context"/>
                    <chsGEH:DescShort>
                        <xsl:value-of select="concat($Start/GEH/DescShortPrefix,$Start/GEH/pfx:ErrorReport/Msg)"/>
                    </chsGEH:DescShort>
                    <xsl:for-each select="$Start/GEH/DescLongAppend">
                        <chsGEH:DescLong>
                            <xsl:value-of select="."/>
                        </chsGEH:DescLong>
                    </xsl:for-each>
                    <chsGEH:ErrorReport>
                        <xsl:copy-of select="$Start/GEH/pfx:ErrorReport/ancestor-or-self::*/namespace::node()"/>
                        <xsl:copy-of select="$Start/GEH/pfx:ErrorReport/@*"/>
                        <xsl:copy-of select="$Start/GEH/pfx:ErrorReport/node()"/>
                    </chsGEH:ErrorReport>
                    <xsl:for-each select="$Start/GEH/Retry">
                        <chsGEH:Retry>
                            <chsGEH:RetryCount>
                                <xsl:value-of select="RetryCount"/>
                            </chsGEH:RetryCount>
                            <xsl:copy-of select="chsGEH:RetryOptions"/>
                        </chsGEH:Retry>
                    </xsl:for-each>
                </chsGEH:TechError>
            </Notify>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Notify - TechError">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>551</pd:x>
        <pd:y>174</pd:y>
        <config>
            <processName>/Common/Functions/Subprocesses/Notify/Notify.process</processName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/GEH/pfx:ErrorReport/Data/*" element="chsGEH:TechError" cardinality=""/>
        </pd:coercions>
        <pd:inputBindings>
            <Notify>
                <chsGEH:TechError>
                    <xsl:copy-of select="$Start/GEH/chsCom:Context"/>
                    <xsl:copy-of select="$Start/GEH/pfx:ErrorReport/Data/chsGEH:TechError/chsCom:Context"/>
                    <chsGEH:DescShort>
                        <xsl:value-of select="concat($Start/GEH/DescShortPrefix,$Start/GEH/pfx:ErrorReport/Data/chsGEH:TechError/chsGEH:DescShort)"/>
                    </chsGEH:DescShort>
                    <xsl:for-each select="$Start/GEH/pfx:ErrorReport/Data/chsGEH:TechError/chsGEH:DescLong">
                        <chsGEH:DescLong>
                            <xsl:value-of select="."/>
                        </chsGEH:DescLong>
                    </xsl:for-each>
                    <xsl:for-each select="$Start/GEH/DescLongAppend">
                        <chsGEH:DescLong>
                            <xsl:value-of select="."/>
                        </chsGEH:DescLong>
                    </xsl:for-each>
                    <xsl:copy-of select="$Start/GEH/pfx:ErrorReport/Data/chsGEH:TechError/chsGEH:ErrorReport"/>
                    <xsl:for-each select="$Start/GEH/pfx:ErrorReport/Data/chsGEH:TechError/chsGEH:Retry">
                        <chsGEH:Retry>
                            <chsGEH:RetryCount>
                                <xsl:value-of select="chsGEH:RetryCount"/>
                            </chsGEH:RetryCount>
                            <xsl:copy-of select="chsGEH:RetryOptions"/>
                        </chsGEH:Retry>
                    </xsl:for-each>
                </chsGEH:TechError>
            </Notify>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Notify - TechError (embedded)">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>551</pd:x>
        <pd:y>255</pd:y>
        <config>
            <processName>/Common/Functions/Subprocesses/Notify/Notify.process</processName>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/GEH/pfx:ErrorReport/Data/*" element="chsGEH:TechError" cardinality=""/>
        </pd:coercions>
        <pd:inputBindings>
            <Notify>
                <chsGEH:TechError>
                    <xsl:copy-of select="$Start/GEH/chsCom:Context"/>
                    <xsl:copy-of select="$Start/GEH/pfx:ErrorReport/Data/chsGEH:TechError/chsCom:Context"/>
                    <chsGEH:DescShort>
                        <xsl:value-of select="concat($Start/GEH/DescShortPrefix,$Start/GEH/pfx:ErrorReport/Data/chsGEH:TechError/chsGEH:DescShort)"/>
                    </chsGEH:DescShort>
                    <xsl:for-each select="$Start/GEH/pfx:ErrorReport/Data/chsGEH:TechError/chsGEH:DescLong">
                        <chsGEH:DescLong>
                            <xsl:value-of select="."/>
                        </chsGEH:DescLong>
                    </xsl:for-each>
                    <xsl:for-each select="$Start/GEH/DescLongAppend">
                        <chsGEH:DescLong>
                            <xsl:value-of select="."/>
                        </chsGEH:DescLong>
                    </xsl:for-each>
                    <xsl:choose>
                        <xsl:when test="exists($Start/GEH/pfx:ErrorReport/Data/chsGEH:TechError/chsGEH:ErrorReport)">
                            <xsl:copy-of select="$Start/GEH/pfx:ErrorReport/Data/chsGEH:TechError/chsGEH:ErrorReport"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <chsGEH:ErrorReport>
                                <StackTrace>
                                    <xsl:value-of select="$Start/GEH/pfx:ErrorReport/StackTrace"/>
                                </StackTrace>
                                <Msg>
                                    <xsl:value-of select="$Start/GEH/pfx:ErrorReport/Msg"/>
                                </Msg>
                                <FullClass>
                                    <xsl:value-of select="$Start/GEH/pfx:ErrorReport/FullClass"/>
                                </FullClass>
                                <Class>
                                    <xsl:value-of select="$Start/GEH/pfx:ErrorReport/Class"/>
                                </Class>
                                <ProcessStack>
                                    <xsl:value-of select="$Start/GEH/pfx:ErrorReport/ProcessStack"/>
                                </ProcessStack>
                                <xsl:if test="$Start/GEH/pfx:ErrorReport/MsgCode">
                                    <MsgCode>
                                        <xsl:value-of select="$Start/GEH/pfx:ErrorReport/MsgCode"/>
                                    </MsgCode>
                                </xsl:if>
                            </chsGEH:ErrorReport>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:for-each select="$Start/GEH/Retry">
                        <chsGEH:Retry>
                            <chsGEH:RetryCount>
                                <xsl:value-of select="RetryCount"/>
                            </chsGEH:RetryCount>
                            <xsl:copy-of select="chsGEH:RetryOptions"/>
                        </chsGEH:Retry>
                    </xsl:for-each>
                </chsGEH:TechError>
            </Notify>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Pause">
        <pd:type>com.tibco.plugin.timer.SleepActivity</pd:type>
        <pd:resourceType>ae.activities.sleep</pd:resourceType>
        <pd:x>551</pd:x>
        <pd:y>440</pd:y>
        <config/>
        <pd:inputBindings>
            <ns2:SleepInputSchema>
                <IntervalInMillisec>
                    <xsl:value-of select="$RetryState/RetryState/SleepSecs * 1000"/>
                </IntervalInMillisec>
            </ns2:SleepInputSchema>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Retry">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>793</pd:x>
        <pd:y>440</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$Start/GEH/pfx:ErrorReport/Msg"/>
                </message>
                <xsl:if test="$Start/GEH/pfx:ErrorReport/MsgCode">
                    <messageCode>
                        <xsl:value-of select="$Start/GEH/pfx:ErrorReport/MsgCode"/>
                    </messageCode>
                </xsl:if>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Route By Error Type">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>347</pd:x>
        <pd:y>182</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Set Last Retryable Error">
        <pd:type>com.tibco.pe.core.SetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.setSharedVariable</pd:resourceType>
        <pd:x>673</pd:x>
        <pd:y>448</pd:y>
        <config>
            <variableConfig>/Common/Functions/Subprocesses/GEH/TrackLastErrorByJob.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings>
            <LastError>
                <DateTimeOfError>
                    <xsl:value-of select="current-dateTime()"/>
                </DateTimeOfError>
                <Error>
                    <xsl:copy-of select="$Start/GEH/pfx:ErrorReport"/>
                </Error>
            </LastError>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Set TryForever Values">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>266</pd:x>
        <pd:y>300</pd:y>
        <config>
            <variableName>TryForever</variableName>
        </config>
        <pd:inputBindings>
            <chsGEH:TryForever>
                <chsGEH:FirstError>
                    <xsl:if test="if (exists($Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryForever/chsGEH:FirstError/chsGEH:SecsToPauseBetweenRetries))&#xA;   then $Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryForever/chsGEH:FirstError/chsGEH:SecsToPauseBetweenRetries&#xA;   else $_globalVariables/ns1:GlobalVariables/Common/Functions/GEH/BeforeFirstError/SecsToPauseBetweenRetries">
                        <chsGEH:SecsToPauseBetweenRetries>
                            <xsl:value-of select="if (exists($Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryForever/chsGEH:FirstError/chsGEH:SecsToPauseBetweenRetries))&#xA;   then $Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryForever/chsGEH:FirstError/chsGEH:SecsToPauseBetweenRetries&#xA;   else $_globalVariables/ns1:GlobalVariables/Common/Functions/GEH/BeforeFirstError/SecsToPauseBetweenRetries"/>
                        </chsGEH:SecsToPauseBetweenRetries>
                    </xsl:if>
                    <xsl:if test="if (exists($Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryForever/chsGEH:FirstError/chsGEH:RetryCountToLogError))&#xA;  then $Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryForever/chsGEH:FirstError/chsGEH:RetryCountToLogError&#xA;  else $_globalVariables/ns1:GlobalVariables/Common/Functions/GEH/BeforeFirstError/retryCountToLogError">
                        <chsGEH:RetryCountToLogError>
                            <xsl:value-of select="if (exists($Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryForever/chsGEH:FirstError/chsGEH:RetryCountToLogError))&#xA;  then $Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryForever/chsGEH:FirstError/chsGEH:RetryCountToLogError&#xA;  else $_globalVariables/ns1:GlobalVariables/Common/Functions/GEH/BeforeFirstError/retryCountToLogError"/>
                        </chsGEH:RetryCountToLogError>
                    </xsl:if>
                </chsGEH:FirstError>
                <chsGEH:SubsequentErrors>
                    <xsl:if test="if (exists($Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryForever/chsGEH:SubsequentErrors/chsGEH:SecsToPauseBetweenRetries)) &#xA;  then $Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryForever/chsGEH:SubsequentErrors/chsGEH:SecsToPauseBetweenRetries&#xA;  else $_globalVariables/ns1:GlobalVariables/Common/Functions/GEH/SubsequentError/SecsToPauseBetweenRetries">
                        <chsGEH:SecsToPauseBetweenRetries>
                            <xsl:value-of select="if (exists($Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryForever/chsGEH:SubsequentErrors/chsGEH:SecsToPauseBetweenRetries)) &#xA;  then $Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryForever/chsGEH:SubsequentErrors/chsGEH:SecsToPauseBetweenRetries&#xA;  else $_globalVariables/ns1:GlobalVariables/Common/Functions/GEH/SubsequentError/SecsToPauseBetweenRetries"/>
                        </chsGEH:SecsToPauseBetweenRetries>
                    </xsl:if>
                    <xsl:if test="if (exists($Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryForever/chsGEH:SubsequentErrors/chsGEH:RetryCountToLogError)) &#xA;  then $Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryForever/chsGEH:SubsequentErrors/chsGEH:RetryCountToLogError&#xA;  else $_globalVariables/ns1:GlobalVariables/Common/Functions/GEH/SubsequentError/retryCountToLogError">
                        <chsGEH:RetryCountToLogError>
                            <xsl:value-of select="if (exists($Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryForever/chsGEH:SubsequentErrors/chsGEH:RetryCountToLogError)) &#xA;  then $Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryForever/chsGEH:SubsequentErrors/chsGEH:RetryCountToLogError&#xA;  else $_globalVariables/ns1:GlobalVariables/Common/Functions/GEH/SubsequentError/retryCountToLogError"/>
                        </chsGEH:RetryCountToLogError>
                    </xsl:if>
                </chsGEH:SubsequentErrors>
            </chsGEH:TryForever>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Notify - DataError</pd:from>
        <pd:to>Log - DataError</pd:to>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Route By Error Type</pd:to>
        <pd:xpathDescription>no retry</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Route By Error Type</pd:from>
        <pd:to>Notify - DataError</pd:to>
        <pd:xpathDescription>Data Error</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Start/GEH/pfx:ErrorReport/Data/chsGEH:DataError)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Route By Error Type</pd:from>
        <pd:to>Notify - TechError</pd:to>
        <pd:xpathDescription>TechError</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Start/GEH/pfx:ErrorReport/Data/chsGEH:TechError)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Route By Error Type</pd:from>
        <pd:to>Notify - Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Notify - Error Mapped To TechError</pd:from>
        <pd:to>Log - TechError (Notified)</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Notify - Error</pd:from>
        <pd:to>Log - Error</pd:to>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Get Last Retryable Error</pd:to>
        <pd:xpathDescription>retry (+1)</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Start/GEH/Retry)
and
($Start/GEH/Retry/RetryCount &gt; 1)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Calc Retry State</pd:from>
        <pd:to>Embedded Tech Error Check</pd:to>
        <pd:xpathDescription>notify</pd:xpathDescription>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$RetryState/RetryState/Notify = "true"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Calc Retry State</pd:from>
        <pd:to>Log - TechError (Not Notified)</pd:to>
        <pd:xpathDescription>retry no notify</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>($RetryState/RetryState/Retry = "true")
and
( $RetryState/RetryState/Notify = "false")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Pause</pd:from>
        <pd:to>Set Last Retryable Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Set Last Retryable Error</pd:from>
        <pd:to>Retry</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get Last Retryable Error</pd:from>
        <pd:to>Calc Retry State</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Set TryForever Values</pd:to>
        <pd:xpathDescription>TryForever</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryForever)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Log - DataError</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log - Error</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log - TechError (Notified)</pd:from>
        <pd:to>Give Up or Retry</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Set TryForever Values</pd:from>
        <pd:to>Calc Retry State</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Calc Retry State</pd:to>
        <pd:xpathDescription>TryXTimes</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Start/GEH/Retry/chsGEH:RetryOptions/chsGEH:TryXTimes)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Embedded Tech Error Check</pd:from>
        <pd:to>Notify - Error Mapped To TechError</pd:to>
        <pd:xpathDescription>otherwise</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Embedded Tech Error Check</pd:from>
        <pd:to>Notify - TechError (embedded)</pd:to>
        <pd:xpathDescription>embedded TechError</pd:xpathDescription>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Start/GEH/pfx:ErrorReport/Data/chsGEH:TechError)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Notify - TechError</pd:from>
        <pd:to>Log - TechError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log - TechError</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Give Up or Retry</pd:from>
        <pd:to>Retry</pd:to>
        <pd:xpathDescription>retry</pd:xpathDescription>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$RetryState/RetryState/Retry = "true"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Notify - TechError (embedded)</pd:from>
        <pd:to>Log - TechError (embedded)</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log - TechError (embedded)</pd:from>
        <pd:to>Give Up or Retry</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Give Up or Retry</pd:from>
        <pd:to>End</pd:to>
        <pd:xpathDescription>give up</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log - TechError (Not Notified)</pd:from>
        <pd:to>Pause</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Calc Retry State</pd:from>
        <pd:to>Pause</pd:to>
        <pd:xpathDescription>rety</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$RetryState/RetryState/Retry = "true"</pd:xpath>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>Global Exception Handler (GEH)</pd:description>
        <pd:x>159</pd:x>
        <pd:y>17</pd:y>
        <pd:width>312</pd:width>
        <pd:height>33</pd:height>
        <pd:fontName>Times New Roman-bold-16</pd:fontName>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-1</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
    <pd:label>
        <pd:name>Label (1)</pd:name>
        <pd:description>All Errors, DataErrors, and Tech Errors should be handled by
this GEH.  For examples on how to config and use the GEH,
please refer to the UnitTest in Common under:

\Common\Common\Functions\UnitTest\GEH</pd:description>
        <pd:x>187</pd:x>
        <pd:y>77</pd:y>
        <pd:width>373</pd:width>
        <pd:height>92</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-1</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>