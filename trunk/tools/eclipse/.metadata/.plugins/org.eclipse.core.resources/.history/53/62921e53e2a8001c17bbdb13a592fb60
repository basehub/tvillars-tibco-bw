<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx="http://www.tibco.com/pe/EngineTypes" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions">
    <xsd:import namespace="http://www.tibco.com/pe/EngineTypes" schemaLocation="/Common/Schemas.ThirdParty/BW.Internal/EngineTypes.xsd"/>
    <pd:name>Common/Processes/Subprocesses/Notify/MapErrorReportToDesc.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="MapErrorReportToDesc">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:ErrorReport" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>45</pd:startX>
    <pd:startY>50</pd:startY>
    <pd:returnBindings>
        <MapErrorReportToDesc.output>
            <xsl:for-each select="$Map-ErrorReport-to-Human-Readable-Format/ErrorReport/*">
                <ErrorReportDesc>
                    <xsl:value-of select="concat(local-name(.), ': ', &quot;&#x9;&quot;,.)"/>
                </ErrorReportDesc>
            </xsl:for-each>
        </MapErrorReportToDesc.output>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="MapErrorReportToDesc.output">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="ErrorReportDesc" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>355</pd:endX>
    <pd:endY>50</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:activity name="Map ErrorReport to Human Readable Format">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>210</pd:x>
        <pd:y>64</pd:y>
        <config>
            <element>
                <xsd:element name="ErrorReport">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Activity" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="ErrorMsg" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="FullClass" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="MsgCode" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Class" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="ProcessStack" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Data" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <ErrorReport>
                <Activity>
                    <xsl:value-of select="substring-before(substring-after($Start/MapErrorReportToDesc/pfx:ErrorReport/StackTrace, '['),']')"/>
                </Activity>
                <xsl:if test="$Start/MapErrorReportToDesc/pfx:ErrorReport/Msg">
                    <ErrorMsg>
                        <xsl:value-of select="$Start/MapErrorReportToDesc/pfx:ErrorReport/Msg"/>
                    </ErrorMsg>
                </xsl:if>
                <xsl:if test="$Start/MapErrorReportToDesc/pfx:ErrorReport/FullClass">
                    <FullClass>
                        <xsl:value-of select="$Start/MapErrorReportToDesc/pfx:ErrorReport/FullClass"/>
                    </FullClass>
                </xsl:if>
                <xsl:if test="$Start/MapErrorReportToDesc/pfx:ErrorReport/MsgCode">
                    <MsgCode>
                        <xsl:value-of select="$Start/MapErrorReportToDesc/pfx:ErrorReport/MsgCode"/>
                    </MsgCode>
                </xsl:if>
                <xsl:if test="$Start/MapErrorReportToDesc/pfx:ErrorReport/Class">
                    <Class>
                        <xsl:value-of select="$Start/MapErrorReportToDesc/pfx:ErrorReport/Class"/>
                    </Class>
                </xsl:if>
                <ProcessStack>
                    <xsl:value-of select="concat(&#xA;&quot;&#xD;&#xA;&quot;&#xA;,tib:concat-sequence-format(&#xA;   tib:tokenize($Start/MapErrorReportToDesc/pfx:ErrorReport/ProcessStack, '>')&#xA;   ,&quot;&#xD;&#xA;&quot;)&#xA;)"/>
                </ProcessStack>
                <xsl:if test="exists($Start/MapErrorReportToDesc/pfx:ErrorReport/Data)">
                    <Data>
                        <xsl:value-of select="concat(&#xA;&quot;&#xD;&#xA;&quot;&#xA;,tib:render-xml($Start/MapErrorReportToDesc/pfx:ErrorReport/Data/*, 1,1))"/>
                    </Data>
                </xsl:if>
            </ErrorReport>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Map ErrorReport to Human Readable Format</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map ErrorReport to Human Readable Format</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>