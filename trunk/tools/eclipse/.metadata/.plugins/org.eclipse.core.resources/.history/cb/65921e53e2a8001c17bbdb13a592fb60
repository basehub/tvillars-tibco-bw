<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:dateUtil="java://com.chicos.eai.common.functions.DateUtil" xmlns:ns2="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pfx="www.tibco.com/plugin/Sleep">
    <pd:name>Common/Processes/Time Window Check.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="TimeWindowCheck.Input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="DateTimeToTest" type="xsd:dateTime" minOccurs="0"/>
                    <xsd:element name="StartDate" type="xsd:date"/>
                    <xsd:element name="StartTime" type="xsd:time"/>
                    <xsd:element name="StopTime" type="xsd:time"/>
                    <xsd:element name="SleepIfOutsideWindow" type="xsd:boolean" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>29</pd:startX>
    <pd:startY>103</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$Time-Calcs/TimeWindowCheck.Output"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="TimeWindowCheck.Output">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="InRunningTimeWindow" type="xsd:boolean"/>
                    <xsd:element name="TimeSecs" type="xsd:long"/>
                    <xsd:element name="StartTime" type="xsd:dateTime"/>
                    <xsd:element name="StopTime" type="xsd:dateTime"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>279</pd:endX>
    <pd:endY>103</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:activity name="Log - Sleeping">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>145</pd:x>
        <pd:y>243</pd:y>
        <config>
            <role>%%Constants/Logging/Roles/Info%%</role>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <message>
                    <xsl:value-of select="concat('outside current time window ', $Time-Calcs/TimeWindowCheck.Output/StartTime, ' - ', $Time-Calcs/TimeWindowCheck.Output/StopTime, '  Sleeping for ', $Time-Calcs/TimeWindowCheck.Output/TimeSecs div 60, ' minutes')"/>
                </message>
                <msgCode>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Constants/Logging/MsgCodes/Inprocess"/>
                </msgCode>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Sleep">
        <pd:type>com.tibco.plugin.timer.SleepActivity</pd:type>
        <pd:resourceType>ae.activities.sleep</pd:resourceType>
        <pd:x>279</pd:x>
        <pd:y>243</pd:y>
        <config/>
        <pd:inputBindings>
            <pfx:SleepInputSchema>
                <IntervalInMillisec>
                    <xsl:value-of select="$Time-Calcs/TimeWindowCheck.Output/TimeSecs * 1000"/>
                </IntervalInMillisec>
            </pfx:SleepInputSchema>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Time Calcs">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>145</pd:x>
        <pd:y>103</pd:y>
        <config>
            <element>
                <xsd:element name="TimeWindowCheck.Output">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="InRunningTimeWindow" type="xsd:boolean"/>
                            <xsd:element name="TimeSecs" type="xsd:long"/>
                            <xsd:element name="StartTime" type="xsd:dateTime"/>
                            <xsd:element name="StopTime" type="xsd:dateTime"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <xsl:variable name="DateTimeToTest" select="tib:if-absent( $Start/TimeWindowCheck.Input/DateTimeToTest, current-dateTime())"/>
            <xsl:variable name="StartTime" select="concat(&#xA;if (tib:compare-date($Start/TimeWindowCheck.Input/StartDate, $DateTimeToTest)  > 0)&#xA;  then $Start/TimeWindowCheck.Input/StartDate&#xA;  else if (tib:compare-time($Start/TimeWindowCheck.Input/StartTime,&#xA;                                                  $Start/TimeWindowCheck.Input/StopTime) &lt; 0 ) &#xA;    then if (tib:compare-time($Start/TimeWindowCheck.Input/StopTime,$DateTimeToTest) > 0)&#xA;       then tib:left($DateTimeToTest, 10)&#xA;       else tib:left(tib:add-to-dateTime($DateTimeToTest, 0, 0, 1,0,0,0), 10)&#xA;   else if (tib:compare-time($Start/TimeWindowCheck.Input/StartTime,$DateTimeToTest) > 0&#xA;                 and  tib:compare-time($Start/TimeWindowCheck.Input/StopTime,$DateTimeToTest) > 0 ) &#xA;    then tib:left(tib:add-to-dateTime($DateTimeToTest, 0, 0, -1,0,0,0), 10)&#xA;    else tib:left($DateTimeToTest, 10)&#xA;, 'T', $Start/TimeWindowCheck.Input/StartTime&#xA;)"/>
            <xsl:variable name="StopTime" select="concat(&#xA;tib:add-to-date(tib:left($StartTime,10), 0, 0, &#xA;if (tib:compare-time($Start/TimeWindowCheck.Input/StartTime,&#xA;                                          $Start/TimeWindowCheck.Input/StopTime) > 0 )&#xA;  then 1&#xA;  else 0&#xA;), 'T', $Start/TimeWindowCheck.Input/StopTime)"/>
            <xsl:variable name="InRunningTimeWindow" select="tib:compare-dateTime($DateTimeToTest, $StartTime) >= 0&#xA;and&#xA;tib:compare-dateTime($DateTimeToTest, $StopTime) &lt; 0"/>
            <TimeWindowCheck.Output>
                <InRunningTimeWindow>
                    <xsl:value-of select="$InRunningTimeWindow"/>
                </InRunningTimeWindow>
                <xsl:choose>
                    <xsl:when test="$InRunningTimeWindow">
                        <TimeSecs>
                            <xsl:value-of select="(round(dateUtil:getTimestamp($StopTime) - dateUtil:getTimestamp($DateTimeToTest)) div 1000)"/>
                        </TimeSecs>
                    </xsl:when>
                    <xsl:otherwise>
                        <TimeSecs>
                            <xsl:value-of select="(dateUtil:getTimestamp(&#xA;tib:add-to-dateTime($StartTime, 0,0,&#xA;if (tib:compare-dateTime($StartTime, $DateTimeToTest) &lt; 0)&#xA;  then 1&#xA;  else 0&#xA;,0,0,0))&#xA;- dateUtil:getTimestamp($DateTimeToTest)) &#xA;div 1000"/>
                        </TimeSecs>
                    </xsl:otherwise>
                </xsl:choose>
                <StartTime>
                    <xsl:value-of select="$StartTime"/>
                </StartTime>
                <StopTime>
                    <xsl:value-of select="$StopTime"/>
                </StopTime>
            </TimeWindowCheck.Output>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Time Calcs</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Time Calcs</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Time Calcs</pd:from>
        <pd:to>Log - Sleeping</pd:to>
        <pd:xpathDescription>sleep</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>( $Start/TimeWindowCheck.Input/SleepIfOutsideWindow = "true" )
and 
($Time-Calcs/TimeWindowCheck.Output/InRunningTimeWindow = "false")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Log - Sleeping</pd:from>
        <pd:to>Sleep</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Sleep</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>Simple function for determing if process is currently in the running time
window.  Also determines the time remaining in the time window or
time until the next time window opens up.</pd:description>
        <pd:x>207</pd:x>
        <pd:y>32</pd:y>
        <pd:width>413</pd:width>
        <pd:height>62</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-1</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>